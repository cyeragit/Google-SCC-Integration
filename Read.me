Deployment Instructions
Below are the detailed steps to set up and deploy the integration.
1️. Prerequisites
Before deployment, ensure:
•	✅ You have access to Google Cloud Console.
•	✅ A Google Cloud project is set up.
•	✅ Google Cloud SDK (`gcloud CLI`) is installed.
•	✅ Cyera Tenant is deployed and issues are generated in Cyera tenant
•	✅ Cyera API credentials are available. For detailed instructions on generating Cyera CLIENT_ID and CLIENT_SECRET consult Cyera documentation.
2️. Enable Required APIs
Run the following command to enable necessary Google Cloud APIs:
```sh
gcloud services enable cloudfunctions.googleapis.com \
    secretmanager.googleapis.com \
    securitycenter.googleapis.com \
    cloudresourcemanager.googleapis.com \
    cloudscheduler.googleapis.com \
    pubsub.googleapis.com
```
3️. Store Cyera API Credentials Securely
Use Google Secret Manager to store sensitive credentials:
```sh
gcloud secrets create CLIENT_ID --replication-policy="automatic"
gcloud secrets create CLIENT_SECRET --replication-policy="automatic"
gcloud secrets create PROJECT_ID --replication-policy="automatic" 
-replace PROJECT_ID with your actual Project ID.
4️. Set Up Pub/Sub for Triggering the Function
Create a Pub/Sub topic:
```sh
gcloud pubsub topics create cyera-trigger
```
5️. Grant the Cloud Function service account access
gcloud secrets add-iam-policy-binding CLIENT_ID \
    --member="serviceAccount:<YOUR_SERVICE_ACCOUNT>" \
    --role="roles/secretmanager.secretAccessor"

gcloud secrets add-iam-policy-binding CLIENT_SECRET \
    --member="serviceAccount:<YOUR_SERVICE_ACCOUNT>" \
    --role="roles/secretmanager.secretAccessor"

gcloud secrets add-iam-policy-binding PROJECT_ID \
    --member="serviceAccount:<YOUR_SERVICE_ACCOUNT>" \
    --role="roles/secretmanager.secretAccessor"
Replace <YOUR_SERVICE_ACCOUNT> with your actual service account email.
6. Set up Cloud Scheduler to invoke the function every minute
The scheduler may be adjusted to invoke function at any interval using CRON expressions
gcloud scheduler jobs create pubsub cyera-scheduler-job \
    --schedule="* * * * *" \
    --time-zone="UTC" \
    --topic=cyera-trigger \
    --message-body="Triggering cyera-to-scc function" \
    --location=us-central1

7. Deploy the Cloud Function
Create a `requirements.txt` file with the necessary Python dependencies:
```txt
requests
google-cloud-securitycenter
google-cloud-secret-manager
google-cloud-resource-manager
protobuf
```
Deploy the function with the following command. Ensure that the Cloud Function file is called main.py. (For the actual Cloud Function see Appendix 1)
gcloud functions deploy cyera-to-scc \
    --runtime python310 \
    --trigger-topic cyera-trigger \
    --entry-point cloud_function_entry \
    --memory 512MB \
    --region us-central1 \
    --timeout 60s \
    --service-account <YOUR_SERVICE_ACCOUNT>
